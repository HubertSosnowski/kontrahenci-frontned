[{"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\index.js":"1","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\reportWebVitals.js":"2","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\App.js":"3","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Kontrahenci.js":"4","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\Navigation.js":"5","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\KontrahenciData.js":"6","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Adresy.js":"7","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\AdresyData.js":"8","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Root.js":"9","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Faktury.js":"10","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\FakturyData.js":"11"},{"size":829,"mtime":1611586045028,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":765,"mtime":1612437359165,"results":"15","hashOfConfig":"13"},{"size":6071,"mtime":1612515510341,"results":"16","hashOfConfig":"13"},{"size":1948,"mtime":1612437393412,"results":"17","hashOfConfig":"13"},{"size":2630,"mtime":1612515512478,"results":"18","hashOfConfig":"13"},{"size":7696,"mtime":1612476770530,"results":"19","hashOfConfig":"13"},{"size":2017,"mtime":1611585453541,"results":"20","hashOfConfig":"13"},{"size":646,"mtime":1611587295485,"results":"21","hashOfConfig":"13"},{"size":8093,"mtime":1612523512745,"results":"22","hashOfConfig":"13"},{"size":1166,"mtime":1612516780785,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5tbb2t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\index.js",[],["48","49"],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\reportWebVitals.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\App.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Kontrahenci.js",["50","51","52","53","54"],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\Navigation.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\KontrahenciData.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Adresy.js",["55","56","57","58","59"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { styled as styledMaterial } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Fakerator from 'fakerator';\r\nimport { CodeBlock, dracula } from 'react-code-blocks';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {\r\n  columns,\r\n  reducer,\r\n  initialStateForm,\r\n  sampleCode,\r\n} from '../components/AdresyData';\r\n\r\nconst DeleteButtonWrapper = styledMaterial(Button)({\r\n  bottom: '20px',\r\n  left: '150px',\r\n  position: 'absolute',\r\n});\r\n\r\nconst AddAdres = styled.div`\r\n  padding: 12px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nconst BottomDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CodeBlockDiv = styled.div`\r\n  font-size: 13px;\r\n  font-family: 'Fira Code', monospace;\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h4 {\r\n    padding-right: 30px;\r\n  }\r\n`;\r\n\r\nconst CodeWrapper = styled.div``;\r\n\r\nfunction Adresy() {\r\n  const [allFilled, setAllFiled] = useState(false);\r\n  const [state, dispatch] = useReducer(reducer, initialStateForm);\r\n  const [selectedToDelete, setSelectedToDelete] = useState([]);\r\n  const [allAdresy, setAllAdresy] = useState([]);\r\n  const [allNipy, setAllNipy] = useState([]);\r\n  const [selectedNip, setSelectedNip] = useState('');\r\n\r\n  const selectOnChange = (event) => {\r\n    const nip = event.target.value;\r\n    setSelectedNip(nip);\r\n    console.log(selectedNip);\r\n    axios\r\n      .get(`https://kontrahenci-api.herokuapp.com/adresy/nip/${nip}`)\r\n      .then(function (response) {\r\n        setAllAdresy(response.data.adresy);\r\n        console.log(response.data.adresy);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('bład łaczenia z bazą danych', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllNipy();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isFilled = false;\r\n    isFilled = Object.values(state).every(Boolean);\r\n    setAllFiled(isFilled);\r\n  }, [state]);\r\n\r\n  const getAllNipy = () => {\r\n    axios\r\n      .get('https://kontrahenci-api.herokuapp.com/kontrahenci')\r\n      .then(function (response) {\r\n        // setSelectedNip(response.data.kontrahenci[0].nip);\r\n        setAllNipy(response.data.kontrahenci);\r\n        console.log(response.data.kontrahenci);\r\n      })\r\n      .catch(function (error) {\r\n        console.error('bład łaczenia z bazą danych', error);\r\n      });\r\n  };\r\n\r\n  const deleteButtonClick = () => {\r\n    if (selectedToDelete.length) {\r\n      selectedToDelete.forEach((selectedId) => {\r\n        axios\r\n          .delete(`https://kontrahenci-api.herokuapp.com/adresy/${selectedId}`)\r\n          .then((res) => console.log(res))\r\n          .then(\r\n            setAllAdresy((old) => old.filter((item) => item._id !== selectedId))\r\n          )\r\n          .catch((err) => console.log(err));\r\n      });\r\n    }\r\n    setSelectedToDelete([]);\r\n  };\r\n\r\n  const submitKontrahent = () => {\r\n    console.log(state);\r\n    axios({\r\n      method: 'post',\r\n      url: 'https://kontrahenci-api.herokuapp.com/adresy',\r\n      data: state,\r\n    }).catch((err) => window.alert('Brak kontrahenta o podanym id.'));\r\n  };\r\n\r\n  const textUpdateFunction = (e, item) => {\r\n    dispatch({ type: item.field, value: e.target.value });\r\n  };\r\n\r\n  const randomButton = () => {\r\n    const fakerator = Fakerator('pl-PL');\r\n    const miasto = fakerator.address.city();\r\n    const ulica = fakerator.address.streetName();\r\n    const numer_budynku = fakerator.random.number(1, 200);\r\n    const kod_pocztowy = fakerator.address.postCode();\r\n\r\n    dispatch({\r\n      type: 'setAll',\r\n      value: {\r\n        miasto,\r\n        ulica,\r\n        numer_budynku,\r\n        kod_pocztowy,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Adresy danego kontrahenta</h2>\r\n      <SelectWrapper>\r\n        <h4>Wybierz kontrahenta:</h4>\r\n        <FormControl variant='outlined'>\r\n          <InputLabel id='demo-simple-select-outlined-label'>NIP</InputLabel>\r\n          <Select value={selectedNip} onChange={selectOnChange} label='NIP'>\r\n            {allNipy.map((kontrahent, i) => (\r\n              <MenuItem key={kontrahent.nip} value={Number(kontrahent.nip)}>\r\n                {kontrahent.nip}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </SelectWrapper>\r\n      <div style={{ height: 400, width: '100%', color: '#efeff1' }}>\r\n        <DataGrid\r\n          rows={allAdresy ? allAdresy : []}\r\n          columns={columns}\r\n          pageSize={5}\r\n          loading={allAdresy ? false : true}\r\n          checkboxSelection={true}\r\n          onSelectionChange={(e) => setSelectedToDelete(e.rowIds)}\r\n        />\r\n        <DeleteButtonWrapper\r\n          onClick={deleteButtonClick}\r\n          disabled={selectedToDelete.length ? false : true}\r\n          startIcon={<DeleteIcon />}\r\n          variant='contained'\r\n          color='secondary'\r\n        >\r\n          Usuń zaznaczone\r\n        </DeleteButtonWrapper>\r\n      </div>\r\n      <BottomDiv>\r\n        <AddAdres style={{ width: '350px' }}>\r\n          <h2>Dodaj nowy adres dla danego kontrahenta</h2>\r\n          <StyledForm>\r\n            <FormControl variant='outlined'>\r\n              <InputLabel id='demo-simple-select-outlined-label'>\r\n                NIP\r\n              </InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-outlined-label'\r\n                id='demo-simple-select-outlined'\r\n                value={state.id_kontrahenta.field}\r\n                onChange={(e) =>\r\n                  textUpdateFunction(e, { field: 'id_kontrahenta' })\r\n                }\r\n                label='NIP'\r\n              >\r\n                {allNipy.map((kontrahent, i) => (\r\n                  <MenuItem key={kontrahent.nip} value={kontrahent.id}>\r\n                    {kontrahent.nip}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {columns.map((item) => {\r\n              if (item.field !== 'id' && item.field !== 'id_kontrahenta') {\r\n                return (\r\n                  <TextField\r\n                    key={item.field}\r\n                    variant='outlined'\r\n                    // id={item.field}\r\n                    label={item.headerName}\r\n                    value={state[item.field]}\r\n                    onChange={(e) => textUpdateFunction(e, item)}\r\n                    size='small'\r\n                    required\r\n                    type={item.field === 'nip' || '' ? 'number' : 'text'}\r\n                  />\r\n                );\r\n              } else return null;\r\n            })}\r\n            <Button onClick={randomButton}>Wypełnij randomowo</Button>\r\n            <Button\r\n              disabled={allFilled ? false : true}\r\n              variant='contained'\r\n              onClick={submitKontrahent}\r\n            >\r\n              Dodaj adres\r\n            </Button>\r\n          </StyledForm>\r\n        </AddAdres>\r\n        {/* <CodeWrapper>\r\n          <h2>Przykładowy kod</h2>\r\n          <CodeBlockDiv>\r\n            <CodeBlock text={sampleCode} theme={dracula} language='jsx' />\r\n          </CodeBlockDiv>\r\n        </CodeWrapper> */}\r\n      </BottomDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Adresy;\r\n","D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\AdresyData.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Root.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\pages\\Faktury.js",[],"D:\\programowanie\\nowe-kontrahenci-frontend\\src\\components\\FakturyData.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":19},{"ruleId":"64","severity":1,"message":"68","line":10,"column":21,"nodeType":"66","messageId":"67","endLine":10,"endColumn":28},{"ruleId":"64","severity":1,"message":"69","line":13,"column":3,"nodeType":"66","messageId":"67","endLine":13,"endColumn":24},{"ruleId":"64","severity":1,"message":"70","line":25,"column":7,"nodeType":"66","messageId":"67","endLine":25,"endColumn":19},{"ruleId":"64","severity":1,"message":"71","line":45,"column":7,"nodeType":"66","messageId":"67","endLine":45,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":19},{"ruleId":"64","severity":1,"message":"68","line":10,"column":21,"nodeType":"66","messageId":"67","endLine":10,"endColumn":28},{"ruleId":"64","severity":1,"message":"72","line":20,"column":3,"nodeType":"66","messageId":"67","endLine":20,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":44,"column":7,"nodeType":"66","messageId":"67","endLine":44,"endColumn":19},{"ruleId":"64","severity":1,"message":"71","line":58,"column":7,"nodeType":"66","messageId":"67","endLine":58,"endColumn":18},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'CodeBlock' is defined but never used.","Identifier","unusedVar","'dracula' is defined but never used.","'sampleCodeKontrahenci' is defined but never used.","'CodeBlockDiv' is assigned a value but never used.","'CodeWrapper' is assigned a value but never used.","'sampleCode' is defined but never used.","no-global-assign","no-unsafe-negation"]